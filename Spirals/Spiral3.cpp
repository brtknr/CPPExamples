#include <iostream>#include <fstream>#include <cmath>#include <cstdlib>using namespace std;#define   MaxNo 5001void DXFSetUp(void);void DXFLines(void);void DXFText(void);void DXFFinishOff(void);int   i,NoSegments,Layer,Colour,PointsPerCycle,NumberOfCycles,      Spiral,NumSpirals,clockoranti,Circle,MyLine;float x[MaxNo],y[MaxNo],z[MaxNo],PI,      r,r0,theta,lambda,      DXFx1,DXFy1,DXFz1,      DXFx2,DXFy2,DXFz2;ofstream Emma("Spiral3.dxf");int main(void){PI=4.0*atan(1.0);DXFSetUp();//lambda=(2.0/PI)*log((1.0+sqrt(5.0))/2.0);lambda=1.0;NumberOfCycles=2;r0=40000.0/exp(lambda*2.0*PI*NumberOfCycles);NumSpirals=16;PointsPerCycle=100;Layer=0;NoSegments=NumberOfCycles*PointsPerCycle;for(clockoranti=-1;clockoranti<=1;clockoranti+=2){for(Spiral=1;Spiral<=NumSpirals;Spiral+=1){for(i=0;i<=NoSegments;i+=1){theta=(2.0*PI*i)/(1.0*PointsPerCycle);r=r0*exp(lambda*theta);x[i]=r*cos(clockoranti*(theta+(2.0*PI*Spiral)/(1.0*NumSpirals)));y[i]=r*sin(clockoranti*(theta+(2.0*PI*Spiral)/(1.0*NumSpirals)));z[i]=0.0;}Colour=Layer;for(i=1;i<=NoSegments;i+=1)DXFLines();}}Layer=1;NoSegments=PointsPerCycle;for(Circle=0;Circle<=2.0*NumberOfCycles*NumSpirals;Circle+=1){for(i=0;i<=NoSegments;i+=1){theta=(2.0*PI*i)/(1.0*PointsPerCycle);r=r0*exp((lambda*2.0*PI*Circle)/(2.0*NumSpirals));x[i]=r*cos(theta);y[i]=r*sin(theta);z[i]=0.0;}Colour=Layer;for(i=1;i<=NoSegments;i+=1)DXFLines();}Layer=1;NoSegments=1;for(MyLine=1;MyLine<=2.0*NumSpirals;MyLine+=1){theta=(2.0*PI*MyLine)/(2.0*NumSpirals);r=r0;x[0]=r*cos(theta);y[0]=r*sin(theta);z[0]=0.0;r=r0*exp(lambda*2.0*PI*NumberOfCycles);x[1]=r*cos(theta);y[1]=r*sin(theta);z[1]=0.0;Colour=Layer;for(i=1;i<=NoSegments;i+=1)DXFLines();}DXFFinishOff();cout<<"DXF file written, end of program\n";return 0;}void DXFSetUp(void){Emma<<"0\n";Emma<<"SECTION\n";Emma<<"2\n";Emma<<"ENTITIES\n";}void DXFLines(void){DXFx1=x[i-1];DXFy1=y[i-1];DXFz1=z[i-1];DXFx2=x[i];DXFy2=y[i];DXFz2=z[i];Emma<<"0\nLINE\n8\n"<<Layer<<"\n";Emma<<"10\n"<<DXFx1<<"\n";Emma<<"20\n"<<DXFy1<<"\n";Emma<<"30\n"<<DXFz1<<"\n";Emma<<"11\n"<<DXFx2<<"\n";Emma<<"21\n"<<DXFy2<<"\n";Emma<<"31\n"<<DXFz2<<"\n";Emma<<"62\n"<<Colour<<"\n";}void DXFFinishOff(void){Emma<<"0\n";Emma<<"ENDSEC\n";Emma<<"0\n";Emma<<"EOF\n";Emma.close();}